{"version":3,"sources":["page/Header.js","page/Footer.js","page/classModelSatu.js","page/classModelDua.js","page/functionModelDua.js","page/functionModelSatu.js","App.js","serviceWorker.js","index.js"],"names":["Header","align","Component","Footer","classModelSatu","props","state","keterangan","ket","this","classModelDua","imgUrl","imgDesc","handleClick","bind","e","preventDefault","setState","width","src","alt","margin","onClick","React","functionModelDua","functionModelSatu","href","teks","alert","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"2NAaeA,E,uKATb,OACC,yBAAKC,MAAM,UACV,oDACA,mF,GALiBC,aCUNC,E,uKARb,OACC,yBAAKF,MAAM,UACV,iE,GAJiBC,aCkBNE,E,kDAjBX,WAAYC,GAAO,IAAD,8BACd,cAAMA,IACDC,MAAM,CACPC,WAAa,EAAKF,MAAMG,KAHd,E,qDAQd,OACI,yBAAKP,MAAM,UACP,8EACA,4BAAKQ,KAAKH,MAAMC,iB,GAZHL,a,OC4BdQ,E,kDA3Bd,WAAYL,GAAO,IAAD,8BACjB,cAAMA,IACDC,MAAQ,CACZK,OAAS,mEACTC,QAAU,wOAGX,EAAKC,YAAc,EAAKA,YAAYC,KAAjB,gBAPF,E,wDAUNC,GACXA,EAAEC,iBACFP,KAAKQ,SAAU,CAACN,OAAS,yGACxBC,QAAU,4zB,+BAIX,OACC,yBAAKX,MAAM,SAASiB,MAAM,OACzB,yBAAKC,IAAOV,KAAKH,MAAMK,OAAQS,IAAI,SAASF,MAAM,QAClD,uBAAGG,OAAO,QAAQZ,KAAKH,MAAMM,SAC7B,4BAAQU,QAASb,KAAKI,aAAtB,qB,GAtBwBU,IAAMrB,WCQnBsB,EARS,SAACnB,GACxB,OACC,yBAAKJ,MAAM,UACV,4BAAKI,EAAME,cCUCkB,MARf,SAA2BpB,GAC1B,OACC,yBAAKJ,MAAM,UACV,uBAAGyB,KAAK,GAAGJ,QAAS,SAACP,GAAD,OAPvB,SAAqBY,EAAKZ,GACzBA,EAAEC,iBACFY,MAAMD,GAKuBd,CAAY,8BAAgCE,KAAKV,EAAMsB,QCWtEE,MAbf,WACE,OACE,6BACI,kBAAC,EAAD,MACA,kBAAC,EAAD,MACA,kBAAC,EAAD,CAAgBrB,IAAI,oBACpB,kBAAC,EAAD,CAAmBmB,KAAK,QACxB,kBAAC,EAAD,CAAkBpB,WAAW,0DAC7B,kBAAC,EAAD,QCJYuB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,a","file":"static/js/main.fa90519d.chunk.js","sourcesContent":["import React, {Component} from 'react';\n\nclass Header extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div align='center'>\n\t\t\t\t<h2>Tugas Jumat React JS</h2>\n\t\t\t\t<h5>==============================================</h5>\t\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Header;","import React, {Component} from 'react';\n\nclass Footer extends Component{\n\trender(){\n\t\treturn(\n\t\t\t<div align=\"center\">\n\t\t\t\t<h5>Made By Tasya Sukma Maftuhah</h5>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default Footer;","import React,{Component} from 'react';\n\nclass classModelSatu extends Component{\n    constructor(props){\n        super(props)\n        this.state={\n            keterangan : this.props.ket\n        }\n    }\n\n    render(){\n        return(\n            <div align=\"center\">\n                <h5>==============================================</h5> \n                <h4>{this.state.keterangan}</h4>\n            </div>\n        );\n    }\n}\n\nexport default classModelSatu;\n","import React from 'react';\n\nclass classModelDua extends React.Component {\n\tconstructor(props){\n\t\tsuper(props)\n\t\tthis.state = {\n\t\t\timgUrl : \"https://www.herbco.com/images/Category/large/c-374-dandelion.jpg\",\n\t\t\timgDesc : 'The Dandelion means: Healing from emotional pain and physical injury alike. Intelligence, especially in an emotional and spiritual sense. The warmth and power of the rising sun. Surviving through all challenges and difficulties.'\n\t\t}\n\n\t\tthis.handleClick = this.handleClick.bind(this);\n\t}\n\n\thandleClick(e){\n\t\te.preventDefault();\t\t\n\t\tthis.setState ({imgUrl : 'https://easternfloral.flowermanager.net/wp-content/uploads/sites/20/2013/11/shutterstock_117657757.jpg',\n\t\t\timgDesc : 'The Chrysanthemum is the flower of the month for November, and this beautiful flower comes with a wide variety of meanings all across the globe. In Asia the chrysanthemum signifies life and rebirth, making them great gifts for birthdays and baby showers. In Europe the chrysanthemum signifies an expression of sympathy. Chrysanthemumâ€™s are typically looked at as a flower that signifies respect and honor in America. The color of the flower can also affect the meaning behind the chrysanthemum. For example, if you receive a red chrysanthemum from someone, it is a symbol of love. A yellow chrysanthemum blossom on the other hand signifies neglected love or sorrow. A white chrysanthemum is a symbol of loyalty and devoted love. In general, chrysanthemums are believed to represent happiness, love, longevity and joy'});\n\t}\n\n\trender(){\n\t\treturn(\n\t\t\t<div align='center' width='70%'>\n\t\t\t\t<img src = {this.state.imgUrl} alt=\"flower\" width='50%'/>\n\t\t\t\t<p margin=\"15px\">{this.state.imgDesc}</p>\n\t\t\t\t<button onClick={this.handleClick}>Next Picture</button>\n\t\t\t</div>\n\t\t);\n\t}\n}\n\nexport default classModelDua;","import React from 'react';\n\nconst functionModelDua =(props) => {\n\treturn(\n\t\t<div align=\"center\">\n\t\t\t<h4>{props.keterangan}</h4>\n\t\t</div>\n\t);\n}\n\nexport default functionModelDua;","import React from 'react';\n\n\nfunction handleClick(teks,e){\n\te.preventDefault()\n\talert(teks)\n}\nfunction functionModelSatu(props){\n\treturn(\n\t\t<div align=\"center\">\n\t\t\t<a href='' onClick={(e) => handleClick(\"Hi! Have a very blessed day\" , e)}>{props.teks}</a>\n\t\t</div>\n\t);\n}\n\nexport default functionModelSatu;","import React from 'react';\nimport Header from './page/Header';\nimport Footer from './page/Footer';\nimport ClassModelSatu from './page/classModelSatu';\nimport ClassModelDua from './page/classModelDua';\nimport FunctionModelDua from './page/functionModelDua';\nimport FunctionModelSatu from './page/functionModelSatu';\n\nfunction App() {\n  return (\n    <div>\n        <Header/>\n        <ClassModelDua/>\n        <ClassModelSatu ket=\"BKPSDM X NIOMIC\"/>\n        <FunctionModelSatu teks=\"Hi!\"/>\n        <FunctionModelDua keterangan=\"This message comes from const type function with prop\"/>\n        <Footer/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}